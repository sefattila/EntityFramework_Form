// <auto-generated />
using System;
using LoginApp.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoginApp.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LoginApp.CORE.Entities.Text", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TextDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Texts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2023, 9, 7, 20, 15, 14, 53, DateTimeKind.Local).AddTicks(9426),
                            Status = 0,
                            TextDetail = "DenemeDeneme",
                            Title = "Dene",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2023, 9, 7, 20, 15, 14, 53, DateTimeKind.Local).AddTicks(9428),
                            Status = 0,
                            TextDetail = "Beşiktaş",
                            Title = "Kulüp",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("LoginApp.CORE.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Account")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account = 0,
                            CreateDate = new DateTime(2023, 9, 7, 20, 15, 14, 53, DateTimeKind.Local).AddTicks(9299),
                            FirstName = "Ali",
                            LastName = "Gündüz",
                            Password = "a.gunduz1",
                            Status = 0,
                            UserName = "agunduz"
                        },
                        new
                        {
                            Id = 2,
                            Account = 2,
                            CreateDate = new DateTime(2023, 9, 7, 20, 15, 14, 53, DateTimeKind.Local).AddTicks(9311),
                            FirstName = "Emrah",
                            LastName = "Yaşar",
                            Password = "e.yasar1",
                            Status = 0,
                            UserName = "eyasar"
                        },
                        new
                        {
                            Id = 3,
                            Account = 2,
                            CreateDate = new DateTime(2023, 9, 7, 20, 15, 14, 53, DateTimeKind.Local).AddTicks(9312),
                            FirstName = "Savaş",
                            LastName = "Kurt",
                            Password = "savas.kurt1903",
                            Status = 0,
                            UserName = "skurt"
                        });
                });

            modelBuilder.Entity("LoginApp.CORE.Entities.Text", b =>
                {
                    b.HasOne("LoginApp.CORE.Entities.Users", "User")
                        .WithMany("Texts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LoginApp.CORE.Entities.Users", b =>
                {
                    b.Navigation("Texts");
                });
#pragma warning restore 612, 618
        }
    }
}
